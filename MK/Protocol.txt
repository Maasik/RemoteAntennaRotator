// Программа контроллера углового положения AS5045 по RS-485

// Все устройства после первоначального программировании получают адрес 150.

// Команды мастера для контроллера углового положения AS5045:

// Команда задания сетевого адреса устройству.

// Запрос: <01><xxx> - задание адреса устройства, ххх - адрес в диапазоне 
0..255

// Пример запроса <01><160> - 0х96 0х97 0хC2 0х01 0хA0 0х0B 0хA9

// Ответ: <xxx> - полученный адрес. Пример ответа: 0х96 0х97 0х41 0хA0 0х89 
0хA9

// Ответ приходит со старого адреса, после этого происходит смена адреса

// и дальнейшие запросы должны идти уже с новым адресом

// Команда запроса углового положения и статуса AS5045.

// Запрос: <02> - запрос данных об угловом положении.

// Пример запроса по адресу 160: <02> - 0х96 0хА0 0х81 0х02 0хDC 0xA9

// Ответ: <Байт_1><Байт_2><Байт_3>

// Пример ответа: 0х96 0хA0 0х03 0хB4 0х98 0х40 0х30 0хA9

// 0хB4 0х98 0х40 - информация из AS5045, из них только старшие 18 бит 
являются

// значащими, т.е.:

// 0хB49 - 12-бит, угловое положение (2889) или 0,08 х 2889 = 231,12 град.

// 0х84 - 6 бит, статус (OCF, COF, LIN, MagINC, MagDEC, EvenPAR), где

// OCF = 1, COF = 0, LIN = 0, MagINC = 0, MagDEC = 0, EvenPAR = 0

// при правильной работе биты OCF, COF, LIN, MagINC, MagDEC = 10000x--,

// при неправильном положении (или отсутствии) магнита MagINC = 1, MagDEC = 
1,

// т.е. правильными вариантами являются - 0x80 или 0х84 в зависимости от 
EvenPAR

// Все другие команды считаются ошибочными, и на них контроллер отвечает

// одним байтом - 'E'(0x45) от слова "Error".

// Настройки порта - 57600/8/1/N.

// НЕ ЗАБЫВАЕМ МЕНЯТЬ СЕТЕВЫЕ АДРЕСА УСТРОЙСТВА RS-485, ЕСЛИ ОНИ БУДУТ 
РАБОТАТЬ

// В ОДНОЙ СЕТИ.

// КОНФИГУРИРОВАНИЕ СИСТЕМЫ: 1)ПОДКЛЮЧАЕМ ПЕРВОЕ УСТРОЙСТВО (ТОЛЬКО ЕГО 
ОДНО),

// ОБРАЩАЕМСЯ К НЕМУ ПО АДРЕСУ 150 И МЕНЯЕМ КОМАНДОЙ <01> АДРЕС НА НУЖНЫЙ.

// ПОДКЛЮЧАЕМ К СЕТИ ВТОРОЕ УСТРОЙСТВО И АНАЛОГИЧНО МЕНЯЕМ ЕГО АДРЕС.

/*********************** Протокол обмена по RS-485 
*****************************

PACKAGE:

--------

START_BYTE 0x96

ADDRESS

DATALEN

[DATA1] // if exists

[DATA2] // if exists

[DATA3] // if exists

CRC

STOP_BYTE 0xA9

DATALEN bits

------------

bit7 = 1 MASTER SENDS

0 SLAVE SENDS

bit6 = 1 ADDRESS WAS XORed with 1, IT WAS EQUAL TO START_BYTE or STOP_BYTE

0 ADDRESS UNCHANGED

bit5 = 0 FIXED

bit4 = 1 DATA3 (if exists) WAS XORed with 1, IT WAS EQUAL TO START_BYTE or 
STOP_BYTE

0 DATA3 (if exists) UNCHANGED

bit3 = 1 DATA2 (if exists) WAS XORed with 1, IT WAS EQUAL TO START_BYTE or 
STOP_BYTE

0 DATA2 (if exists) UNCHANGED

bit2 = 1 DATA1 (if exists) WAS XORed with 1, IT WAS EQUAL TO START_BYTE or 
STOP_BYTE

0 DATA1 (if exists) UNCHANGED

bit1...bit0 = 0 to 3 NUMBER OF DATA BYTES SEND

CRC generation :

----------------

crc_send = datalen ^ address;

crc_send ^= data[0]; // if exists

crc_send ^= data[1]; // if exists

crc_send ^= data[2]; // if exists

crc_send = ~crc_send;

if ((crc_send == START_BYTE) || (crc_send == STOP_BYTE))

crc_send++;

NOTE: DATALEN<4..0> can not take the START_BYTE<4..0> or STOP_BYTE<4..0> 
values.


Привет! Дописал команды // Команды для контроллера (ASCII):
//  Команда                ОТВЕТ
//  0x01 xxx               addr    - назначение адреса (по умолчанию addr = 150)
//  0x03                   'R'     - вращение вправо
//  0x04                   'L'     - вращение влево
//  0x05                   'S'     - стоп вращение по азимуту
//  0x06                   'T'     - элевация вверх (Top)
//  0x07                   'B'     - элевация вниз (Bottom)
//  0x08                   'S'     - стоп элевация
//  0x09 xxx               cmd     - команда для АТ
//  другие команды         'E'     - ошибка
//  Мертвое время          'D'     - мертвое время(~ 1 сек.)при смене вращения
//  Настройки порта - 57600/8/1/N.
